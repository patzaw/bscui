% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bscui.R
\name{bscui}
\alias{bscui}
\title{Build SVG/Shiny custom user interface}
\usage{
bscui(
  svg_txt,
  ui_elements = NULL,
  show_menu = TRUE,
  menu_width = "20px",
  zoom_min = 0.5,
  zoom_max = 20,
  zoom_step = 1.1,
  clip = FALSE,
  default_png_scale = 1,
  width = NULL,
  height = NULL,
  elementId = NULL
)
}
\arguments{
\item{svg_txt}{character string with svg code}

\item{ui_elements}{NULL or a data frame with the following columns:
\itemize{
\item \strong{id}: the element identifier
\item \strong{ui_type}: either "selectable" (several elements can be selected),
"button" (action will be triggered on click), "none" (no ui)
\item \strong{title}: a description of the element to display on mouseover event
(support html tags). If NA, no description will be displayed.
\item \strong{visibility}: the css visibility of the element. NA values
are interpreted as "hidden".
\item \strong{opacity}: the opacity of the element between 0 and 1
(if NA, the value in the svg is kept)
\item \strong{fill}: the color used to fill the element
(if NA, the value in the svg is kept)
\item \strong{fill_opacity}: opacity of fill
(if NA, the value in the svg is kept)
\item \strong{stroke}: the color used for element border
(if NA, the value in the svg is kept)
\item \strong{stroke_width}: the width of the element border
(if NA, the value in the svg is kept)
\item \strong{stroke_opacity}: opacity of stroke
(if NA, the value in the svg is kept)
}}

\item{show_menu}{if TRUE (default) control menu will be available}

\item{menu_width}{css width value}

\item{zoom_min}{smallest zoom value}

\item{zoom_max}{largest zoom value}

\item{zoom_step}{zooming step: the larger the faster}

\item{clip}{if true, when the current zoom is 1, the viewBox is
automatically set to its original state (the drawing cannot be moved)}

\item{default_png_scale}{default value for scaling PNG export}

\item{width, height}{widget width: must be a valid CSS unit (like \code{'100\\\%'},
\code{'400px'}, \code{'auto'}) or a number, which will be coerced to a
string and have \code{'px'} appended.}

\item{elementId}{hmtl identifier of the widget}

\item{selection_color}{the color with which selected elements will be
highlighted}
}
\description{
Build SVG/Shiny custom user interface
}
