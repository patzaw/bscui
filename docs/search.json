[{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"installation-and-requirements","dir":"Articles","previous_headings":"","what":"Installation and requirements","title":"Introduction to bscui","text":"‘bscui’ R package currently available github. Hopefully ‘bscui’ available soon CRAN.","code":"## Dependencies install.packages(\"htmlwidgets\") ## Install from github devtools::install_github(\"patzaw/bscui\")"},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"vignette-requirements","dir":"Articles","previous_headings":"Installation and requirements","what":"Vignette requirements","title":"Introduction to bscui","text":"following packages dependencies ‘bscui’ strictly speaking required run code examples discussed document. Built 2023-12-16 xml2 used read SVG files readr dplyr used read manipulate tables figure contextual information stringr glue used facilitate creation html tags","code":"library(xml2) library(dplyr) library(readr) library(stringr) library(glue) sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=fr_BE.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=fr_BE.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=fr_BE.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Brussels ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] DT_0.31       glue_1.6.2    stringr_1.5.1 readr_2.1.4   xml2_1.3.6    ## [6] dplyr_1.1.4   bscui_0.1.0   knitr_1.45    ##  ## loaded via a namespace (and not attached): ##  [1] jsonlite_1.8.8    compiler_4.3.2    tidyselect_1.2.0  jquerylib_0.1.4   ##  [5] systemfonts_1.0.5 textshaping_0.3.7 yaml_2.3.8        fastmap_1.1.1     ##  [9] R6_2.5.1          generics_0.1.3    htmlwidgets_1.6.4 tibble_3.2.1      ## [13] desc_1.4.3        tzdb_0.4.0        bslib_0.6.1       pillar_1.9.0      ## [17] rlang_1.1.2       utf8_1.2.4        cachem_1.0.8      stringi_1.8.3     ## [21] xfun_0.41         fs_1.6.3          sass_0.4.8        memoise_2.0.1     ## [25] cli_3.6.2         pkgdown_2.0.7     magrittr_2.0.3    digest_0.6.33     ## [29] rstudioapi_0.15.0 hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       ## [33] evaluate_0.23     ragg_1.2.7        fansi_1.0.6       rmarkdown_2.25    ## [37] purrr_1.0.2       tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.7"},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"simple-use-in-r-session-or-static-documents","dir":"Articles","previous_headings":"","what":"Simple use in R session or static documents","title":"Introduction to bscui","text":"main function package bscui(). takes main argument character string SVG code. use xml2 read SVG files mandatory can useful validate SVG manipulate displaying .","code":""},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"animal-cells-example","dir":"Articles","previous_headings":"Simple use in R session or static documents","what":"Animal cells example","title":"Introduction to bscui","text":"example relies figure animal cells taken SwissBioPics. simplest way display figure shown . figure can grabbed mouse enlarged shrunk using mouse wheel. Clicking button top-left corner figure displays menu various functions, including resetting view exporting figure SVG PNG format. Several configuration choices made default can changed, zoom range width menu.","code":"svg <- xml2::read_xml(system.file(    \"svg-examples\", \"Animal_cells.svg.gz\",    package=\"bscui\" )) figure <- bscui(svg) figure"},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"defining-ui-elements","dir":"Articles","previous_headings":"Simple use in R session or static documents","what":"Defining UI elements","title":"Introduction to bscui","text":"User Interface (UI) elements provided data frame following columns: id: element identifier ui_type: either “selectable” (several elements can selected), “button” (action triggered clicking), “none” (action click) title: description element display mouse hovers element Information different part cell taken UniProt. title feature can take simple text valid html element shown .","code":"info <- readr::read_tsv(system.file(    \"svg-examples\", \"uniprot_cellular_locations.txt.gz\",    package=\"bscui\" ), col_types=strrep(\"c\", 6)) |>     mutate(id = str_remove(`Subcellular location ID`, \"-\")) ui_elements <- info |>     mutate(       ui_type = \"selectable\",       title = glue(          '<div style=\"width:300px; height:100px; overflow:auto; padding:5px;',          'font-size:75%;',          'border:black 1px solid; background:#FFFFF0AA;\">',          \"<strong>{Name}<\/strong>: {Description}\",          \"<\/div>\",          .sep=\" \"       )    ) |>    select(id, ui_type, title) figure <- figure |>     set_bscui_ui_elements(ui_elements) figure"},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"setting-element-styles","dir":"Articles","previous_headings":"Simple use in R session or static documents","what":"Setting element styles","title":"Introduction to bscui","text":"style elements can changed set_bscui_styles() function. function can called several times change different elements different options.","code":"figure <- figure |>     set_bscui_styles(       bind_rows(          info |>             filter(Name == \"Cytosol\") |>             mutate(fill = \"#FF7F7F\"),          info |>             filter(Name == \"Nucleoplasm\") |>             mutate(fill = \"#7F7FFF\")       ) |>           select(             id, fill          )    ) |>     set_bscui_styles(       info |>          filter(Name == \"Endosome\") |>          mutate(stroke = \"yellow\", strokeWidth = \"2px\") |>           select(id, stroke, strokeWidth)    ) figure"},{"path":"https://patzaw.github.io/bscui/articles/bscui.html","id":"setting-element-attributes","dir":"Articles","previous_headings":"Simple use in R session or static documents","what":"Setting element attributes","title":"Introduction to bscui","text":"Element attributes can also changed set_bscui_attributes() function. example shows focus nucleus content starting original figure, setting “display” attribute elements “none”. Also size nucleolus slightly increased. example set_bscui_options() function used hide menu disable view changes (zoom pan). options can changed function.","code":"nucleus_part <- c(    \"SL0191\", \"SL0190\", \"SL0182\", \"SL0188\", \"SL0494\", \"SL0180\",    \"SL0031\", \"SL0465\", \"SL0127\", \"SL0186\" ) figure <- figure |>    set_bscui_attributes(       info |>          filter(             !id %in% nucleus_part          ) |>          mutate(display=\"none\") |>          select(id, display)    ) |>     set_bscui_attributes(tibble(id=\"sib_copyright\", display=\"none\")) |>    set_bscui_attributes(tibble(id=\"SL0188\", transform=\"scale(1.8 1.8)\")) |>     set_bscui_attributes(       tibble(id=\"SL0188\", transform=\"translate(-237 -202)\"),       append=TRUE    ) figure |>     set_bscui_options(show_menu=FALSE, zoom_min=1, zoom_max=1, clip=TRUE)"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"installation-and-requirements","dir":"Articles > Web_only","previous_headings":"","what":"Installation and requirements","title":"Preparing SVG: examples, tips and tricks","text":"following packages used. Built 2023-12-16","code":"library(bscui) library(xml2) library(dplyr) library(readr) library(stringr) sessionInfo() ## R version 4.3.2 (2023-10-31) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.3 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=fr_BE.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=fr_BE.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=fr_BE.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Brussels ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] stringr_1.5.1 readr_2.1.4   dplyr_1.1.4   xml2_1.3.6    bscui_0.1.0   ## [6] here_1.0.1    knitr_1.45    ##  ## loaded via a namespace (and not attached): ##  [1] jsonlite_1.8.8    compiler_4.3.2    tidyselect_1.2.0  jquerylib_0.1.4   ##  [5] systemfonts_1.0.5 textshaping_0.3.7 yaml_2.3.8        fastmap_1.1.1     ##  [9] R6_2.5.1          generics_0.1.3    htmlwidgets_1.6.4 tibble_3.2.1      ## [13] desc_1.4.3        rprojroot_2.0.4   tzdb_0.4.0        bslib_0.6.1       ## [17] pillar_1.9.0      rlang_1.1.2       utf8_1.2.4        cachem_1.0.8      ## [21] stringi_1.8.3     xfun_0.41         fs_1.6.3          sass_0.4.8        ## [25] memoise_2.0.1     cli_3.6.2         pkgdown_2.0.7     magrittr_2.0.3    ## [29] digest_0.6.33     rstudioapi_0.15.0 hms_1.1.3         lifecycle_1.0.4   ## [33] vctrs_0.6.5       evaluate_0.23     glue_1.6.2        ragg_1.2.7        ## [37] fansi_1.0.6       rmarkdown_2.25    purrr_1.0.2       pkgconfig_2.0.3   ## [41] tools_4.3.2       htmltools_0.5.7"},{"path":[]},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"original-svg","dir":"Articles > Web_only","previous_headings":"Reading anatomograms","what":"Original SVG","title":"Preparing SVG: examples, tips and tricks","text":": https://github.com/ebi-gene-expression-group/anatomogram","code":"file_name <- \"homo_sapiens.female.svg\" svg <- read_xml(file.path(    \"https://raw.githubusercontent.com\",    \"ebi-gene-expression-group/anatomogram\",    \"master/src/svg\",    file_name ))"},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"extract-element-titles-from-the-svg","dir":"Articles > Web_only","previous_headings":"Reading anatomograms","what":"Extract element titles from the SVG","title":"Preparing SVG: examples, tips and tricks","text":"","code":"get_element_titles <- function(x){    id <- xml_attr(x, \"id\")    children <- xml_children(x)    children_titles <- tibble(id=character(), label=character())    label <- character()    if(length(children) > 0) for(i in 1:length(children)){       child <- children[[i]]       if(xml_name(child) == \"title\"){          label <- xml_attr(child, \"id\")       }else{          children_titles <- children_titles |>             bind_rows(get_element_titles(child))       }    }    toRet <- tibble(id = id, label = label)  |>       bind_rows(children_titles) |>       filter(!is.na(id))    return(toRet) } element_titles <- get_element_titles(svg) head(element_titles) ## # A tibble: 6 × 2 ##   id             label          ##   <chr>          <chr>          ## 1 UBERON_0001831 parotid gland  ## 2 UBERON_0001013 adipose_tissue ## 3 UBERON_0000948 heart          ## 4 UBERON_0001135 smooth_muscle  ## 5 UBERON_0000955 brain          ## 6 UBERON_0000310 breast"},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"remove-title-elements-from-svg","dir":"Articles > Web_only","previous_headings":"Reading anatomograms","what":"Remove title elements from SVG","title":"Preparing SVG: examples, tips and tricks","text":"","code":"namespace_element_nodes <- xml_find_all(    svg, \"//namespace::*[name()='']/parent::*\" ) xml_attr(namespace_element_nodes, \"xmlns\") <- NULL titles <- xml_find_all(svg, \"//title\") for(to_remove in titles){    xml_remove(to_remove) } xml_attr(namespace_element_nodes[1], \"xmlns\") <- \"http://www.w3.org/2000/svg\" bscui(svg)"},{"path":[]},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"read-original-svg","dir":"Articles > Web_only","previous_headings":"Reading swissbiopics","what":"Read original SVG","title":"Preparing SVG: examples, tips and tricks","text":": https://www.swissbiopics.org/","code":"file_name <- \"Animal_cells.svg\" svg <- read_xml(file.path(    \"https://www.swissbiopics.org/\",    \"api/image\",    file_name ))"},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"remove-text-elements-from-svg","dir":"Articles > Web_only","previous_headings":"Reading swissbiopics","what":"Remove text elements from SVG","title":"Preparing SVG: examples, tips and tricks","text":"","code":"namespace_element_nodes <- xml_find_all(    svg, \"//namespace::*[name()='']/parent::*\" ) xml_attr(namespace_element_nodes, \"xmlns\") <- NULL titles <- xml_find_all(svg, \"//text\") for(to_remove in titles){    xml_remove(to_remove) } xml_attr(namespace_element_nodes[1], \"xmlns\") <- \"http://www.w3.org/2000/svg\" bscui(svg)"},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"get-cellular-location-information","dir":"Articles > Web_only","previous_headings":"Reading swissbiopics","what":"Get cellular location information","title":"Preparing SVG: examples, tips and tricks","text":"","code":"tmp_file <- tempfile(fileext=\".txt.gz\") info <- download.file(    url = \"https://rest.uniprot.org/locations/stream?compressed=true&fields=id%2Cname%2Ccategory%2Cdefinition%2Ccontent%2Cgene_ontologies&format=tsv&query=%28*%29\",    destfile = tmp_file ) info <- readr::read_tsv(    tmp_file,    col_types = strrep(\"c\", 6) )"},{"path":[]},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"read-original-svg-1","dir":"Articles > Web_only","previous_headings":"Read wikipathways","what":"Read original SVG","title":"Preparing SVG: examples, tips and tricks","text":": https://www.wikipathways.org/","code":"pid <- \"WP4657\" # pid <- \"WP521\" file_name <- paste0(pid, \".svg\") svg <- read_xml(file.path(    \"https://www.wikipathways.org\",    \"wikipathways-assets/pathways\",    pid,    file_name ))"},{"path":"https://patzaw.github.io/bscui/articles/web_only/SVG-examples.html","id":"extract-href","dir":"Articles > Web_only","previous_headings":"Read wikipathways","what":"Extract href","title":"Preparing SVG: examples, tips and tricks","text":"","code":"namespace_element_nodes <- xml_find_all(    svg, \"//namespace::*[name()='']/parent::*\" ) xml_attr(namespace_element_nodes, \"xmlns\") <- NULL a <- xml_find_all(svg, \"//a\") href <- tibble(    id = xml_attr(a, \"id\"),    href = xml_attr(a, \"href\") ) xml_attr(a, \"target\") <- NULL xml_attr(namespace_element_nodes[1], \"xmlns\") <- \"http://www.w3.org/2000/svg\" svg <- as.character(svg) |>    stringr::str_remove_all('xlink:href=\"https?://[^\"]*\"') |>    read_xml() bscui(svg)"},{"path":"https://patzaw.github.io/bscui/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrice Godard. Author, maintainer, copyright holder.","code":""},{"path":"https://patzaw.github.io/bscui/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Godard P (2023). bscui: Build SVG Custom User Interface. R package version 0.1.0,  https://github.com/patzaw/bscui/, https://patzaw.github.io/bscui/.","code":"@Manual{,   title = {bscui: Build SVG Custom User Interface},   author = {Patrice Godard},   year = {2023},   note = {R package version 0.1.0,  https://github.com/patzaw/bscui/},   url = {https://patzaw.github.io/bscui/}, }"},{"path":"https://patzaw.github.io/bscui/index.html","id":"build-svg-custom-user-interface-","dir":"","previous_headings":"","what":"Build SVG Custom User Interface","title":"Build SVG Custom User Interface","text":"Render SVG interactive figures display contextual information, selectable clickable user interface elements. figures can seamlessly integrated Rmarkdown Quarto documents Shiny applications react events triggered within . Additional features include pan, zoom /functionality, ability export figures SVG PNG formats.","code":""},{"path":[]},{"path":"https://patzaw.github.io/bscui/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"Build SVG Custom User Interface","text":"following R packages available CRAN required: htmlwidgets: HTML Widgets R suggested building vignettes running examples: knitr: General-Purpose Package Dynamic Report Generation R rmarkdown: Dynamic Documents R : Simpler Way Find Files xml2: Parse XML dplyr: Grammar Data Manipulation readr: Read Rectangular Text Data stringr: Simple, Consistent Wrappers Common String Operations glue: Interpreted String Literals shiny: Web Application Framework R DT: Wrapper JavaScript Library ‘DataTables’ colourpicker: Colour Picker Tool Shiny Selecting Colours Plots","code":""},{"path":"https://patzaw.github.io/bscui/index.html","id":"from-github","dir":"","previous_headings":"Installation","what":"From github","title":"Build SVG Custom User Interface","text":"","code":"devtools::install_github(\"patzaw/bscui\")"},{"path":"https://patzaw.github.io/bscui/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Build SVG Custom User Interface","text":"Introduction bscui introduction vignette also installed package:","code":"vignette(\"bscui\")"},{"path":"https://patzaw.github.io/bscui/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Build SVG Custom User Interface","text":"","code":"library(bscui) library(xml2) library(readr) library(dplyr) library(stringr)  #######################################@ ## Use an existing SVG file ---- svg <- xml2::read_xml(system.file(    \"svg-examples\", \"Animal_cells.svg.gz\",    package=\"bscui\" )) info <- readr::read_tsv(system.file(    \"svg-examples\", \"uniprot_cellular_locations.txt.gz\",    package=\"bscui\" ), col_types=strrep(\"c\", 6)) |>     mutate(id = str_remove(`Subcellular location ID`, \"-\")) bscui(svg) |>     set_bscui_ui_elements(       info |>           mutate(             ui_type = \"selectable\",             title = Name          ) |>          select(id, ui_type, title)    ) |>     set_bscui_styles(       info |>          filter(Name == \"Cytosol\") |>          mutate(fill = \"#FF7F7F\") |>           select(id, fill)    ) |>     set_bscui_options(zoom_min=1, clip=TRUE)  #######################################@ ## Create SVG shapes ----   #######################################@ ## Shiny application example ----"},{"path":"https://patzaw.github.io/bscui/reference/add_bscui_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Add SVG elements to the UI — add_bscui_elements","title":"Add SVG elements to the UI — add_bscui_elements","text":"Add SVG elements UI","code":""},{"path":"https://patzaw.github.io/bscui/reference/add_bscui_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add SVG elements to the UI — add_bscui_elements","text":"","code":"add_bscui_elements(proxy)"},{"path":"https://patzaw.github.io/bscui/reference/add_bscui_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add SVG elements to the UI — add_bscui_elements","text":"proxy bscui_Proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/add_bscui_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add SVG elements to the UI — add_bscui_elements","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for bscui — bscui-shiny","title":"Shiny bindings for bscui — bscui-shiny","text":"Output render functions using bscui within Shiny applications.","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for bscui — bscui-shiny","text":"","code":"bscuiOutput(outputId, width = \"100%\", height = \"400px\")  renderBscui(expr, env = parent.frame(), quoted = FALSE)  bscuiProxy(shinyId, session = shiny::getDefaultReactiveDomain())"},{"path":"https://patzaw.github.io/bscui/reference/bscui-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for bscui — bscui-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100\\%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates bscui env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable. shinyId single-element character vector indicating shiny output ID UI modify session Shiny session object UI belongs; usually default value suffice","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui-shiny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny bindings for bscui — bscui-shiny","text":"UI can updated bscuiProxy, using different methods: add_bscui_elements: add SVG elements UI remove_bscui_elements: remove SVG elements UI order_bscui_elements (=c(\"front\", \"back\", \"forward\", \"backward\")) update_bscui_attributes set attributes UI element update_bscui_styles: set style UI elements select_bscui_elements: chose selected elements click_bscui_element: trigger single double click UI element get_bscui_svg: get displayed svg","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui.html","id":null,"dir":"Reference","previous_headings":"","what":"Build SVG/Shiny custom user interface — bscui","title":"Build SVG/Shiny custom user interface — bscui","text":"Build SVG/Shiny custom user interface","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build SVG/Shiny custom user interface — bscui","text":"","code":"bscui(   svg_txt,   sanitize_attributes = TRUE,   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://patzaw.github.io/bscui/reference/bscui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build SVG/Shiny custom user interface — bscui","text":"svg_txt character svg code sanitize_attributes logical indicating '<' '>' characters element attributes must replaced text width, height widget width: must valid CSS unit (like '100\\%', '400px', 'auto') number, coerced string 'px' appended. elementId hmtl identifier widget","code":""},{"path":"https://patzaw.github.io/bscui/reference/bscui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build SVG/Shiny custom user interface — bscui","text":"htmlwidget object","code":""},{"path":"https://patzaw.github.io/bscui/reference/click_bscui_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigger a click event on a clickable element — click_bscui_element","title":"Trigger a click event on a clickable element — click_bscui_element","text":"Trigger click event clickable element","code":""},{"path":"https://patzaw.github.io/bscui/reference/click_bscui_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigger a click event on a clickable element — click_bscui_element","text":"","code":"click_bscui_element(proxy, element_id, dbl_click = FALSE)"},{"path":"https://patzaw.github.io/bscui/reference/click_bscui_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigger a click event on a clickable element — click_bscui_element","text":"proxy bscui_Proxy object element_id element identifier click triggered dbl_click logical indicating type click (default: FALSE => single click triggered)","code":""},{"path":"https://patzaw.github.io/bscui/reference/click_bscui_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigger a click event on a clickable element — click_bscui_element","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/get_bscui_svg.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the displayed SVG — get_bscui_svg","title":"Get the displayed SVG — get_bscui_svg","text":"Get displayed SVG","code":""},{"path":"https://patzaw.github.io/bscui/reference/get_bscui_svg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the displayed SVG — get_bscui_svg","text":"","code":"get_bscui_svg(proxy)"},{"path":"https://patzaw.github.io/bscui/reference/get_bscui_svg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the displayed SVG — get_bscui_svg","text":"proxy bscui_Proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/get_bscui_svg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the displayed SVG — get_bscui_svg","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/order_bscui_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Move svg elements in ui — order_bscui_elements","title":"Move svg elements in ui — order_bscui_elements","text":"Move svg elements ui","code":""},{"path":"https://patzaw.github.io/bscui/reference/order_bscui_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move svg elements in ui — order_bscui_elements","text":"","code":"order_bscui_elements(proxy)"},{"path":"https://patzaw.github.io/bscui/reference/order_bscui_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move svg elements in ui — order_bscui_elements","text":"proxy bscui_Proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/order_bscui_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move svg elements in ui — order_bscui_elements","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/remove_bscui_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove SVG elements from the UI — remove_bscui_elements","title":"Remove SVG elements from the UI — remove_bscui_elements","text":"Remove SVG elements UI","code":""},{"path":"https://patzaw.github.io/bscui/reference/remove_bscui_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove SVG elements from the UI — remove_bscui_elements","text":"","code":"remove_bscui_elements(proxy)"},{"path":"https://patzaw.github.io/bscui/reference/remove_bscui_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove SVG elements from the UI — remove_bscui_elements","text":"proxy bscui_Proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/remove_bscui_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove SVG elements from the UI — remove_bscui_elements","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/select_bscui_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace current selection with given element identifiers — select_bscui_elements","title":"Replace current selection with given element identifiers — select_bscui_elements","text":"Replace current selection given element identifiers","code":""},{"path":"https://patzaw.github.io/bscui/reference/select_bscui_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace current selection with given element identifiers — select_bscui_elements","text":"","code":"select_bscui_elements(proxy, element_ids)"},{"path":"https://patzaw.github.io/bscui/reference/select_bscui_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace current selection with given element identifiers — select_bscui_elements","text":"proxy bscui_Proxy object element_ids element identifiers add selection; empty clear selection","code":""},{"path":"https://patzaw.github.io/bscui/reference/select_bscui_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace current selection with given element identifiers — select_bscui_elements","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set attributes of elements of a bscui widget — set_bscui_attributes","title":"Set attributes of elements of a bscui widget — set_bscui_attributes","text":"Set attributes elements bscui widget","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set attributes of elements of a bscui widget — set_bscui_attributes","text":"","code":"set_bscui_attributes(   widget,   element_attributes,   to_ignore = NULL,   targeted_tags = widget$x$structure_shapes,   append = FALSE )"},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set attributes of elements of a bscui widget — set_bscui_attributes","text":"widget bscui object element_attributes data frame id column providing element identifier one column per attribute name. to_ignore identifiers elements ignore: elements children elements update updated targeted_tags targeted_tags affected tag names (default: structure_shapes scui object) append TRUE value concatenate existing value","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set attributes of elements of a bscui widget — set_bscui_attributes","text":"modified bscui object","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set options of bscui widget — set_bscui_options","title":"Set options of bscui widget — set_bscui_options","text":"Set options bscui widget","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set options of bscui widget — set_bscui_options","text":"","code":"set_bscui_options(   widget,   show_menu,   menu_width,   zoom_min,   zoom_max,   zoom_step,   clip,   default_png_scale,   selection_color,   selection_opacity,   hover_color,   hover_opacity,   structure_shapes,   dblclick_timeout,   hover_timeout )"},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set options of bscui widget — set_bscui_options","text":"widget bscui object show_menu TRUE (default) control menu available menu_width css width value (default: \"30px\") zoom_min smallest zoom value (default: 0.5) zoom_max largest zoom value (default: 20) zoom_step zooming step: larger faster (default: 1.1) clip TRUE (default: FALSE), current zoom 1, viewBox automatically set original state (drawing moved) default_png_scale default value scaling PNG export (default: 1) selection_color color used highlight selection (default: \"orange\") selection_opacity opacity selection highlight (default: 0.5) hover_color list colors used highlight hovered elements (default: list(button=\"yellow\", selectable=\"cyan\", none=\"transparent\")) hover_opacity opacity hovered highlight (default: 0.5) structure_shapes SVG shapes considered concrete drawing (default: c(\"rect\", \"circle\", \"ellipse\", \"line\", \"polyline\", \"polygon\", \"path\"): \"text\" excluded) dblclick_timeout minimum time ms 2 independant clicks (default: 250) hover_timeout time ms update hovered element (default: 100)","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set options of bscui widget — set_bscui_options","text":"modified bscui object","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Set styles of elements of a bscui widget — set_bscui_styles","title":"Set styles of elements of a bscui widget — set_bscui_styles","text":"Set styles elements bscui widget","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set styles of elements of a bscui widget — set_bscui_styles","text":"","code":"set_bscui_styles(   widget,   element_styles,   to_ignore = NULL,   targeted_tags = widget$x$structure_shapes,   append = FALSE )"},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set styles of elements of a bscui widget — set_bscui_styles","text":"widget bscui object element_styles NULL data frame id column providing element identifier one column per style name. Column names correspond style name camel case (e.g., \"strokeOpacity\"). to_ignore identifiers elements ignore: elements children elements update updated targeted_tags targeted_tags affected tag names (default: structure_shapes scui object) append TRUE value concatenate existing value","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set styles of elements of a bscui widget — set_bscui_styles","text":"modified bscui object","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_ui_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Set UI elements of a bscui widget — set_bscui_ui_elements","title":"Set UI elements of a bscui widget — set_bscui_ui_elements","text":"Set UI elements bscui widget","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_ui_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set UI elements of a bscui widget — set_bscui_ui_elements","text":"","code":"set_bscui_ui_elements(widget, ui_elements)"},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_ui_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set UI elements of a bscui widget — set_bscui_ui_elements","text":"widget bscui object ui_elements NULL data frame following columns: id: element identifier ui_type: either \"selectable\" (several elements can selected), \"button\" (action triggered click), \"none\" (ui) title: description element display mouseover event","code":""},{"path":"https://patzaw.github.io/bscui/reference/set_bscui_ui_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set UI elements of a bscui widget — set_bscui_ui_elements","text":"modified bscui object","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the attributes of bscui elements in Shiny app — update_bscui_attributes","title":"Update the attributes of bscui elements in Shiny app — update_bscui_attributes","text":"Update attributes bscui elements Shiny app","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the attributes of bscui elements in Shiny app — update_bscui_attributes","text":"","code":"update_bscui_attributes(   proxy,   element_attributes,   to_ignore = NULL,   targeted_tags = NULL )"},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the attributes of bscui elements in Shiny app — update_bscui_attributes","text":"proxy bscui_Proxy object element_attributes data frame id column providing element identifier one column per attribute name. to_ignore elements ignore: elements children elements update updated. parameter taken account \"id\" column element_styles data frame. targeted_tags affected tag names. NULL (default), structure_shapes bscui object","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the attributes of bscui elements in Shiny app — update_bscui_attributes","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_styles.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the style of bscui elements in Shiny app — update_bscui_styles","title":"Update the style of bscui elements in Shiny app — update_bscui_styles","text":"Update style bscui elements Shiny app","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_styles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the style of bscui elements in Shiny app — update_bscui_styles","text":"","code":"update_bscui_styles(   proxy,   element_styles,   to_ignore = NULL,   targeted_tags = NULL,   append = FALSE )"},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_styles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the style of bscui elements in Shiny app — update_bscui_styles","text":"proxy bscui_Proxy object element_styles data frame \"id\" column one column per style apply. \"id\" column missing, modifications apply svg selected elements. to_ignore elements ignore: elements children elements update updated. parameter taken account \"id\" column element_styles data frame. targeted_tags affected tag names. NULL (default), structure_shapes bscui object append TRUE value concatenate existing value","code":""},{"path":"https://patzaw.github.io/bscui/reference/update_bscui_styles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the style of bscui elements in Shiny app — update_bscui_styles","text":"provided proxy object","code":""},{"path":"https://patzaw.github.io/bscui/news/index.html","id":"bscui-010","dir":"Changelog","previous_headings":"","what":"bscui 0.1.0","title":"bscui 0.1.0","text":"first usable version bscui.","code":""}]
